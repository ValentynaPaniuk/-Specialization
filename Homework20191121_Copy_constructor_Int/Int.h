#pragma once
/*Створити клас Int, що імітує роботу стандартного типу int.
Наприклад, нехай код основної програми (в функції main()) для вбудованого типу int має
наступний вигляд:
//при використанні змінних стандартного типу int
int a = 8, b = 3, res = 0;
res = a + b;
res = a / b;
cоut &lt;&lt; res &lt;&lt; еndl;
//при використанні об’єктів типу Int, аналогічний код буде мати вигляд
Int a(8), b(3), res; // res: [0]
res = a.sum(b); // res : [11]
cоut &lt;&lt; res.getValue() &lt;&lt; еndl; // 11
res = a.div(b); // res : [2]
cоut &lt;&lt; res.getValue() &lt;&lt; еndl; // 2
Єдине поле даного класу повинно мати тип int.
Створити
 Конструктори( за замовчуванням та з одним параметром)
 Методи доступу до поля класу
 Метод виведення значення на екран
 Метод додавання до даного екземпляру класу Int іншого екземпляру класу
Int(наприклад сумування може виконувати метод з прототипом Int Sum(const Int&amp;
num))
 Метод віднімання від даного екземпляру класу Int іншого екземпляру класу Int
 Метод множення даного екземпляру класу Int на інший екземпляр класу Int
 Метод діленння даного екземпляру класу Int на інший екземпляр класу
Int(врахувати, що ділення на 0 неможливе)
Напишіть програму, в якій будуть створені три об’єкта класу Int, два з яких будуть
ініціалізовані. Додайте два ініціалізованих об’єкта, присвойте результат третьому, а потім
відобразіть результат на екран.*/
class Int
{
	int a;


	

	

public:

	//Constructors
	Int();
	Int(int a);
	Int(const Int &other);
	//Metody
	int GetA();
	void SetA(int a);
	void FillNumber();
	void PrintNumber();

	int Addition(Int &amp1, Int &amp2);
	int Subtraction(Int &amp1, Int &amp2);
	int Multiplication(Int &amp1, Int &amp2);
	int Division(Int &amp1, Int &amp2);


	
	//Destructor
	~Int();

	
};

