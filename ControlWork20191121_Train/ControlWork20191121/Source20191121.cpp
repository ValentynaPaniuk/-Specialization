#include<iostream>
#include <string>
#include<ctime>
#include"Car.h"
#include"Train.h"
using namespace std;

/*Написати програму роботи з поїздами, на основі класів Car(Вагон) та  Train (Поїзд). Програма пропонує ввести з клавіатури:
Кількість поїздів;
Кількість вагонів для кожного поїзда.
На основі уведених даних створюються поїзди, виводиться загальна інформація про них та набір наступних звітів:
Поїзд в якому їхала найбільша кількість пасажирів.
Поїзд в якому їхала найменша кількість пасажирів.
Клас Car повинен містити:
поля:
тип  вагона(купе, плацкарт, спальний);
кількість пасажирів у вагоні
методи:
конструктори
методи доступу до полів
виводу інформації про вагон
Клас Train повинен містити:
поля:
номер поїзда;
назва поїзда (сполучення, наприклад "Львів - Київ");
поле "вагони" - вказівник на тип Car, якому буде виділятися динамічна пам'ять розміром в кількість вагонів, де індекс даного масиву вказує на номер вагону;
кількість вагонів(може бути полем - константою).
class Train
{
const  int size; // константне поле, ініціалізують у списку ініціалізації конструктора
int number;
Car * train = new Car [size];
// ….
public:
Train(int size, int number) : size(size), number(number)
{// …
}
методи:
Конструктори: по замовчуванню, з параметрами та копіювання;
Стандартні методи доступу до полів класу;
Метод для знаходження вагона з максимальною кількість пасажирів;
Метод для знаходження вагона з мінімальною кількість пасажирів;
Метод для знаходження загальної кількості пасажирів в поїзді;
Метод для виведення інформації про поїзд:
загальна кількість пасажирів.
загальна кількість вагонів.
номер вагону в якому їхала найменша кількість пасажирів
номер вагону в якому їхала найбільша кількість пасажирів. */

// constructor copy

//1. Реалізувати статичні поля і методи в домашній роботі з поїздами.


int main()
{
	//Train train();
	//train.FillTrain();



	cout << "\n\n\n**************************************************************" << endl;
	Train polissia(12345, "Rivne-Lviv", 2);
	polissia.FillTrain();
	polissia.PrintTrain();

	cout << "++++++++++++++++++++  COPY CONSTRUCTOR ++++++++++++++++++++++++++++++++++++++" << endl;
	Train zakarpatia(polissia);
	zakarpatia.PrintTrain();
	cout << "**************************************************************" << endl;




	system("pause");
	return 0;
}