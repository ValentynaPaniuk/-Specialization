#pragma once
/*ООП
Створіть клас XString, який описує рядок. Клас повинен містити наступні конструктори:
конструктор по замовчуванню, який дозволяє створити рядок довжиною 80 символів;
конструктор, який створює рядок та ініціалізує його рядком, переданим в якості параметра;
конструктор копій.
Крім того, даний клас повинен містити набір перевантажених операцій для роботи з рядками:
операція *: повинна повертати новий рядок, який утворюється шляхом перетину двох рядків, тобто їх спільні символи. Наприклад, результатом перетину рядків "Microsoft" та "Windows" буде рядок "ioso".
операція /: повинна повертати новий рядок, який утворюється шляхом відбору символів першого рядка, яких немає в другому. Наприклад, результатом ділення рядка "Microsoft" на "Windows" буде рядок "Mcrft".
операцію +, що дозволяє додати два рядки (конкатенація рядків). Наприклад, результатом додавання двох рядків "Microsoft" та "Windows" буде рядок "MicrosoftWindows".
операцій *=, /= та +=, які діють по вищеописаному принципу. */
class XString
{
	int size;
	char *arr;
public:
	//Constructors: 
	XString();
	XString(int size);
	XString(XString &other);

	//Metody

	void ShowInfoRow();


	//операція*: повинна повертати новий рядок, який утворюється шляхом перетину двох рядків, тобто їх спільні символи. 
	//Наприклад, результатом перетину рядків "Microsoft" та "Windows" буде рядок "ioso".
	XString &operator* (const XString &other);

	//операція / : повинна повертати новий рядок, який утворюється шляхом відбору символів першого рядка, яких немає в другому.
	//Наприклад, результатом ділення рядка "Microsoft" на "Windows" буде рядок "Mcrft".
	XString &operator/ (const XString &other);
	//операцію +, що дозволяє додати два рядки (конкатенація рядків). 
	//Наприклад, результатом додавання двох рядків "Microsoft" та "Windows" буде рядок "MicrosoftWindows".
	XString &operator+ (const XString &other);

	




	~XString();
};

